Program([VarDecl(Id(x), StringType, None, StringLit(be ba ne \t)), FuncDecl(Id(foo), [], Block([AssignStmt(Id(x), BinaryOp(-, BinaryOp(+, NumLit(5.0), BinaryOp(%, NumLit(5.0), NumLit(3.0))), BinaryOp(/, BinaryOp(*, NumLit(8.0), NumLit(12.0)), NumLit(4.0)))), AssignStmt(Id(y), BinaryOp(..., StringLit(be ba ), StringLit(ne))), VarDecl(Id(n), None, var, BinaryOp(<=, NumLit(5.0), NumLit(6.0))), VarDecl(Id(z), BoolType, None, BinaryOp(==, UnaryOp(not, NumLit(5.0)), NumLit(6.0))), If((Id(z), Return(BooleanLit(True))), [], None), VarDecl(Id(w), None, var, BinaryOp(or, BinaryOp(and, BooleanLit(True), StringLit(true)), NumLit(1.0))), VarDecl(Id(b), ArrayType([NumLit(3.0)], StringType), None, ArrayLit(BinaryOp(..., StringLit(ting), NumLit(2.0)))), VarDecl(Id(g), None, var, BinaryOp(*, UnaryOp(-, NumLit(1.0)), UnaryOp(not, NumLit(1.0)))), VarDecl(Id(b), None, var, CallExpr(Id(foo), [])), AssignStmt(Id(Pi), NumLit(3.14)), AssignStmt(ArrayCell(Id(a), [BinaryOp(+, NumLit(1.0), NumLit(2.0)), NumLit(2.0)]), NumLit(1.0))]))])